{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "7f4d8f112474483393045b60237272a1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_aacf7656ee444b65b6f17b557ea0c870",
              "IPY_MODEL_e4c2479690ed4a6d88c975854effce41",
              "IPY_MODEL_7e65ea94ad3547cd9142c5c9f71af718"
            ],
            "layout": "IPY_MODEL_1ca26e49a8074ec19f3c80f1b25c641c"
          }
        },
        "aacf7656ee444b65b6f17b557ea0c870": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5ae762a92b18468794073a30b9a0c1a3",
            "placeholder": "​",
            "style": "IPY_MODEL_82ff316cc3334e5eb97636d644a295f5",
            "value": "loading data: 100%"
          }
        },
        "e4c2479690ed4a6d88c975854effce41": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_0b62be0ab7034209a7df863234693cbb",
            "max": 1,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_bcc626890d4545818ff4780a7e5539d1",
            "value": 1
          }
        },
        "7e65ea94ad3547cd9142c5c9f71af718": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_ff903b36c14b4609b58345cc0cb11ea4",
            "placeholder": "​",
            "style": "IPY_MODEL_5cf331598675466799d58810fd56a8aa",
            "value": " 1/1 [00:18&lt;00:00, 18.79s/it]"
          }
        },
        "1ca26e49a8074ec19f3c80f1b25c641c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "5ae762a92b18468794073a30b9a0c1a3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "82ff316cc3334e5eb97636d644a295f5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0b62be0ab7034209a7df863234693cbb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bcc626890d4545818ff4780a7e5539d1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "ff903b36c14b4609b58345cc0cb11ea4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "5cf331598675466799d58810fd56a8aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "3cd60714b2264a30a79d24ba850263ea": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_3e4168b1e7d94900ac84f49c31b91be6",
              "IPY_MODEL_34b49aa455d44718b9cc73ac9684831a",
              "IPY_MODEL_c1ef4a592f604e90a5afe490e21f56a8"
            ],
            "layout": "IPY_MODEL_2105e0f69c684825929d25e6680c54c9"
          }
        },
        "3e4168b1e7d94900ac84f49c31b91be6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_230c7af8156c41e7b1006ad44c1857b1",
            "placeholder": "​",
            "style": "IPY_MODEL_86797187c24d4148859bea6ca4115800",
            "value": "loading data: 100%"
          }
        },
        "34b49aa455d44718b9cc73ac9684831a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_9972336ad58e4d5ca89fe2413bb0b8d4",
            "max": 1,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_ecb85204d1ff4aa3af54f531166f0c55",
            "value": 1
          }
        },
        "c1ef4a592f604e90a5afe490e21f56a8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_6efd347fc69545d99a2444d8b63fa8e1",
            "placeholder": "​",
            "style": "IPY_MODEL_c244f9575cae4047904b5e1a3596d17b",
            "value": " 1/1 [00:17&lt;00:00, 17.57s/it]"
          }
        },
        "2105e0f69c684825929d25e6680c54c9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "230c7af8156c41e7b1006ad44c1857b1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "86797187c24d4148859bea6ca4115800": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "9972336ad58e4d5ca89fe2413bb0b8d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ecb85204d1ff4aa3af54f531166f0c55": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "6efd347fc69545d99a2444d8b63fa8e1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c244f9575cae4047904b5e1a3596d17b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "30c4efe4c20e426fb541310aa7be33ab": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_f25bcbd73ebf45d8a5f1fa85f7bbdac9",
              "IPY_MODEL_a31c2fdcda8a438b846c908e6564be0c",
              "IPY_MODEL_08672a3cc4e8456781aec0022df9dc76"
            ],
            "layout": "IPY_MODEL_af88404ebfd04ef1a584066731989af1"
          }
        },
        "f25bcbd73ebf45d8a5f1fa85f7bbdac9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_5f7090c6a3714d88861359858649a7ec",
            "placeholder": "​",
            "style": "IPY_MODEL_65fdf78385914326a1488b0cae6a3e9b",
            "value": "training: 100%"
          }
        },
        "a31c2fdcda8a438b846c908e6564be0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "FloatProgressModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ProgressView",
            "bar_style": "",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_930faef299cb427599cf3021362ca649",
            "max": 2998,
            "min": 0,
            "orientation": "horizontal",
            "style": "IPY_MODEL_bbf3e594739540369a5b30300b4a0a6d",
            "value": 2998
          }
        },
        "08672a3cc4e8456781aec0022df9dc76": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HTMLModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HTMLView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_9f40553753074b778766578c532a48b1",
            "placeholder": "​",
            "style": "IPY_MODEL_90de8a037d7f40d5bd8f6c7aa2236a7d",
            "value": " 2996/2998 [01:36&lt;00:00, 46.39it/s]"
          }
        },
        "af88404ebfd04ef1a584066731989af1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": "hidden",
            "width": null
          }
        },
        "5f7090c6a3714d88861359858649a7ec": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "65fdf78385914326a1488b0cae6a3e9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "930faef299cb427599cf3021362ca649": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bbf3e594739540369a5b30300b4a0a6d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ProgressStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "bar_color": null,
            "description_width": ""
          }
        },
        "9f40553753074b778766578c532a48b1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "90de8a037d7f40d5bd8f6c7aa2236a7d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "7f4d8f112474483393045b60237272a1",
            "aacf7656ee444b65b6f17b557ea0c870",
            "e4c2479690ed4a6d88c975854effce41",
            "7e65ea94ad3547cd9142c5c9f71af718",
            "1ca26e49a8074ec19f3c80f1b25c641c",
            "5ae762a92b18468794073a30b9a0c1a3",
            "82ff316cc3334e5eb97636d644a295f5",
            "0b62be0ab7034209a7df863234693cbb",
            "bcc626890d4545818ff4780a7e5539d1",
            "ff903b36c14b4609b58345cc0cb11ea4",
            "5cf331598675466799d58810fd56a8aa",
            "3cd60714b2264a30a79d24ba850263ea",
            "3e4168b1e7d94900ac84f49c31b91be6",
            "34b49aa455d44718b9cc73ac9684831a",
            "c1ef4a592f604e90a5afe490e21f56a8",
            "2105e0f69c684825929d25e6680c54c9",
            "230c7af8156c41e7b1006ad44c1857b1",
            "86797187c24d4148859bea6ca4115800",
            "9972336ad58e4d5ca89fe2413bb0b8d4",
            "ecb85204d1ff4aa3af54f531166f0c55",
            "6efd347fc69545d99a2444d8b63fa8e1",
            "c244f9575cae4047904b5e1a3596d17b",
            "30c4efe4c20e426fb541310aa7be33ab",
            "f25bcbd73ebf45d8a5f1fa85f7bbdac9",
            "a31c2fdcda8a438b846c908e6564be0c",
            "08672a3cc4e8456781aec0022df9dc76",
            "af88404ebfd04ef1a584066731989af1",
            "5f7090c6a3714d88861359858649a7ec",
            "65fdf78385914326a1488b0cae6a3e9b",
            "930faef299cb427599cf3021362ca649",
            "bbf3e594739540369a5b30300b4a0a6d",
            "9f40553753074b778766578c532a48b1",
            "90de8a037d7f40d5bd8f6c7aa2236a7d"
          ]
        },
        "id": "Ae9_5D7MWDPg",
        "outputId": "b713b4d1-80d8-4879-ad60-93a5f5bfc6e8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting https://github.com/ChenHongBo0420/Comm/archive/master.zip\n",
            "  Downloading https://github.com/ChenHongBo0420/Comm/archive/master.zip\n",
            "\u001b[2K     \u001b[32m\\\u001b[0m \u001b[32m59.4 kB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m \u001b[33m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: jax>=0.2.13 in /usr/local/lib/python3.11/dist-packages (from commplax==0.1.1) (0.5.2)\n",
            "Requirement already satisfied: jaxlib>=0.1.66 in /usr/local/lib/python3.11/dist-packages (from commplax==0.1.1) (0.5.1)\n",
            "Requirement already satisfied: flax>=0.3.4 in /usr/local/lib/python3.11/dist-packages (from commplax==0.1.1) (0.10.5)\n",
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (from commplax==0.1.1) (0.13.2)\n",
            "Collecting quantumrandom (from commplax==0.1.1)\n",
            "  Downloading quantumrandom-1.9.0.tar.gz (7.6 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (2.0.2)\n",
            "Requirement already satisfied: msgpack in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (1.1.0)\n",
            "Requirement already satisfied: optax in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (0.2.4)\n",
            "Requirement already satisfied: orbax-checkpoint in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (0.11.12)\n",
            "Requirement already satisfied: tensorstore in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (0.1.73)\n",
            "Requirement already satisfied: rich>=11.1 in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (13.9.4)\n",
            "Requirement already satisfied: typing_extensions>=4.2 in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (4.13.2)\n",
            "Requirement already satisfied: PyYAML>=5.4.1 in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (6.0.2)\n",
            "Requirement already satisfied: treescope>=0.1.7 in /usr/local/lib/python3.11/dist-packages (from flax>=0.3.4->commplax==0.1.1) (0.1.9)\n",
            "Requirement already satisfied: ml_dtypes>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from jax>=0.2.13->commplax==0.1.1) (0.4.1)\n",
            "Requirement already satisfied: opt_einsum in /usr/local/lib/python3.11/dist-packages (from jax>=0.2.13->commplax==0.1.1) (3.4.0)\n",
            "Requirement already satisfied: scipy>=1.11.1 in /usr/local/lib/python3.11/dist-packages (from jax>=0.2.13->commplax==0.1.1) (1.14.1)\n",
            "Requirement already satisfied: pandas>=1.2 in /usr/local/lib/python3.11/dist-packages (from seaborn->commplax==0.1.1) (2.2.2)\n",
            "Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in /usr/local/lib/python3.11/dist-packages (from seaborn->commplax==0.1.1) (3.10.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (1.3.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (4.57.0)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (1.4.8)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (24.2)\n",
            "Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (11.1.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (3.2.3)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn->commplax==0.1.1) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn->commplax==0.1.1) (2025.2)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich>=11.1->flax>=0.3.4->commplax==0.1.1) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich>=11.1->flax>=0.3.4->commplax==0.1.1) (2.18.0)\n",
            "Requirement already satisfied: absl-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from optax->flax>=0.3.4->commplax==0.1.1) (1.4.0)\n",
            "Requirement already satisfied: chex>=0.1.87 in /usr/local/lib/python3.11/dist-packages (from optax->flax>=0.3.4->commplax==0.1.1) (0.1.89)\n",
            "Requirement already satisfied: etils[epy] in /usr/local/lib/python3.11/dist-packages (from optax->flax>=0.3.4->commplax==0.1.1) (1.12.2)\n",
            "Requirement already satisfied: nest_asyncio in /usr/local/lib/python3.11/dist-packages (from orbax-checkpoint->flax>=0.3.4->commplax==0.1.1) (1.6.0)\n",
            "Requirement already satisfied: protobuf in /usr/local/lib/python3.11/dist-packages (from orbax-checkpoint->flax>=0.3.4->commplax==0.1.1) (5.29.4)\n",
            "Requirement already satisfied: humanize in /usr/local/lib/python3.11/dist-packages (from orbax-checkpoint->flax>=0.3.4->commplax==0.1.1) (4.12.2)\n",
            "Requirement already satisfied: simplejson>=3.16.0 in /usr/local/lib/python3.11/dist-packages (from orbax-checkpoint->flax>=0.3.4->commplax==0.1.1) (3.20.1)\n",
            "Requirement already satisfied: toolz>=0.9.0 in /usr/local/lib/python3.11/dist-packages (from chex>=0.1.87->optax->flax>=0.3.4->commplax==0.1.1) (0.12.1)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich>=11.1->flax>=0.3.4->commplax==0.1.1) (0.1.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn->commplax==0.1.1) (1.17.0)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from etils[epath,epy]->orbax-checkpoint->flax>=0.3.4->commplax==0.1.1) (2025.3.2)\n",
            "Requirement already satisfied: importlib_resources in /usr/local/lib/python3.11/dist-packages (from etils[epath,epy]->orbax-checkpoint->flax>=0.3.4->commplax==0.1.1) (6.5.2)\n",
            "Requirement already satisfied: zipp in /usr/local/lib/python3.11/dist-packages (from etils[epath,epy]->orbax-checkpoint->flax>=0.3.4->commplax==0.1.1) (3.21.0)\n",
            "Building wheels for collected packages: commplax, quantumrandom\n",
            "  Building wheel for commplax (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for commplax: filename=commplax-0.1.1-py3-none-any.whl size=58838 sha256=1450b19ab652eac54bd5049249e7354b36bfc298e3342d6f6773038fa75d44e7\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-ffgarggg/wheels/65/62/1c/eb4ebe204ced9b6e7bdf5d15e81d29ef1cb3e01a881ddc1a50\n",
            "  Building wheel for quantumrandom (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for quantumrandom: filename=quantumrandom-1.9.0-py3-none-any.whl size=9109 sha256=8315817392dc3bb19ae330545c785f71e9c421ff67d3ebbcb83c583f40bc563e\n",
            "  Stored in directory: /root/.cache/pip/wheels/4a/24/9a/850e5bc48e7e35c59849cfffc9546d18743370a2f51c72ea5c\n",
            "Successfully built commplax quantumrandom\n",
            "Installing collected packages: quantumrandom, commplax\n",
            "Successfully installed commplax-0.1.1 quantumrandom-1.9.0\n",
            "Collecting https://github.com/remifan/LabPtPTm2/archive/master.zip\n",
            "  Downloading https://github.com/remifan/LabPtPTm2/archive/master.zip\n",
            "\u001b[2K     \u001b[32m/\u001b[0m \u001b[32m482.1 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m \u001b[33m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting zarr==2.9.5 (from zarr[jupyter]==2.9.5->labptptm2==0.2.1)\n",
            "  Downloading zarr-2.9.5-py3-none-any.whl.metadata (4.6 kB)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from labptptm2==0.2.1) (2025.3.2)\n",
            "Collecting s3fs (from labptptm2==0.2.1)\n",
            "  Downloading s3fs-2025.3.2-py3-none-any.whl.metadata (1.9 kB)\n",
            "Requirement already satisfied: pyyaml in /usr/local/lib/python3.11/dist-packages (from labptptm2==0.2.1) (6.0.2)\n",
            "Collecting asciitree (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1)\n",
            "  Downloading asciitree-0.3.3.tar.gz (4.0 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: numpy>=1.7 in /usr/local/lib/python3.11/dist-packages (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.0.2)\n",
            "Collecting fasteners (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1)\n",
            "  Downloading fasteners-0.19-py3-none-any.whl.metadata (4.9 kB)\n",
            "Collecting numcodecs>=0.6.4 (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1)\n",
            "  Downloading numcodecs-0.16.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.0 kB)\n",
            "Requirement already satisfied: notebook in /usr/local/lib/python3.11/dist-packages (from zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.5.7)\n",
            "Requirement already satisfied: ipytree in /usr/local/lib/python3.11/dist-packages (from zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.2)\n",
            "Collecting aiobotocore<3.0.0,>=2.5.4 (from s3fs->labptptm2==0.2.1)\n",
            "  Downloading aiobotocore-2.21.1-py3-none-any.whl.metadata (24 kB)\n",
            "Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.11/dist-packages (from s3fs->labptptm2==0.2.1) (3.11.15)\n",
            "Collecting aioitertools<1.0.0,>=0.5.1 (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1)\n",
            "  Downloading aioitertools-0.12.0-py3-none-any.whl.metadata (3.8 kB)\n",
            "Collecting botocore<1.37.2,>=1.37.0 (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1)\n",
            "  Downloading botocore-1.37.1-py3-none-any.whl.metadata (5.7 kB)\n",
            "Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (2.8.2)\n",
            "Collecting jmespath<2.0.0,>=0.7.1 (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1)\n",
            "  Downloading jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)\n",
            "Requirement already satisfied: multidict<7.0.0,>=6.0.0 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (6.4.3)\n",
            "Requirement already satisfied: wrapt<2.0.0,>=1.10.10 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (1.17.2)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (2.6.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (1.3.2)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (25.3.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (1.6.0)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (0.3.1)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (1.20.0)\n",
            "Requirement already satisfied: typing_extensions in /usr/local/lib/python3.11/dist-packages (from numcodecs>=0.6.4->zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.13.2)\n",
            "Requirement already satisfied: ipywidgets<9,>=7.5.0 in /usr/local/lib/python3.11/dist-packages (from ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (7.7.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.1.6)\n",
            "Requirement already satisfied: tornado>=6.1 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.4.2)\n",
            "Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (24.0.1)\n",
            "Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (23.1.0)\n",
            "Requirement already satisfied: traitlets>=4.2.1 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.7.1)\n",
            "Requirement already satisfied: jupyter-core>=4.6.1 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.7.2)\n",
            "Requirement already satisfied: jupyter-client<8,>=5.3.4 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.1.12)\n",
            "Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.0)\n",
            "Requirement already satisfied: nbformat in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.10.4)\n",
            "Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (7.16.6)\n",
            "Requirement already satisfied: nest-asyncio>=1.5 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.6.0)\n",
            "Requirement already satisfied: ipykernel in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.17.1)\n",
            "Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.8.3)\n",
            "Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.18.1)\n",
            "Requirement already satisfied: prometheus-client in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.21.1)\n",
            "Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.2.0)\n",
            "Requirement already satisfied: urllib3!=2.2.0,<3,>=1.25.4 in /usr/local/lib/python3.11/dist-packages (from botocore<1.37.2,>=1.37.0->aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (2.3.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.11/dist-packages (from ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.6.10)\n",
            "Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (7.34.0)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.0.14)\n",
            "Requirement already satisfied: debugpy>=1.0 in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.8.0)\n",
            "Requirement already satisfied: matplotlib-inline>=0.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.1.7)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (24.2)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.9.5)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.11/dist-packages (from jupyter-core>=4.6.1->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.3.7)\n",
            "Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.11/dist-packages (from nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.4)\n",
            "Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.13.4)\n",
            "Requirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.2.0)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.7.1)\n",
            "Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.3.0)\n",
            "Requirement already satisfied: markupsafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.0.2)\n",
            "Requirement already satisfied: mistune<4,>=2.0.3 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.1.3)\n",
            "Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.10.2)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.5.1)\n",
            "Requirement already satisfied: pygments>=2.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.18.0)\n",
            "Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.21.1)\n",
            "Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.23.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil<3.0.0,>=2.1->aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (1.17.0)\n",
            "Requirement already satisfied: ptyprocess in /usr/local/lib/python3.11/dist-packages (from terminado>=0.8.3->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.7.0)\n",
            "Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.11/dist-packages (from yarl<2.0,>=1.17.0->aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (3.10)\n",
            "Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.11/dist-packages (from argon2-cffi->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (21.2.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.11/dist-packages (from bleach!=5.0.0->bleach[css]!=5.0.0->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.5.1)\n",
            "Requirement already satisfied: tinycss2<1.5,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.4.0)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (75.2.0)\n",
            "Collecting jedi>=0.16 (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1)\n",
            "  Downloading jedi-0.19.2-py2.py3-none-any.whl.metadata (22 kB)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.7.5)\n",
            "Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.0.51)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.0)\n",
            "Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.9.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2024.10.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.24.0)\n",
            "Requirement already satisfied: jupyter-server<3,>=1.8 in /usr/local/lib/python3.11/dist-packages (from notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.16.0)\n",
            "Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.17.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.7)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.22)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.11/dist-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.8.4)\n",
            "Requirement already satisfied: anyio>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.9.0)\n",
            "Requirement already satisfied: websocket-client in /usr/local/lib/python3.11/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.8.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.11/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.13)\n",
            "Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.3.1)\n",
            "Downloading zarr-2.9.5-py3-none-any.whl (144 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m144.3/144.3 kB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading s3fs-2025.3.2-py3-none-any.whl (30 kB)\n",
            "Downloading aiobotocore-2.21.1-py3-none-any.whl (78 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m78.3/78.3 kB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading numcodecs-0.16.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (8.8 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.8/8.8 MB\u001b[0m \u001b[31m68.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading fasteners-0.19-py3-none-any.whl (18 kB)\n",
            "Downloading aioitertools-0.12.0-py3-none-any.whl (24 kB)\n",
            "Downloading botocore-1.37.1-py3-none-any.whl (13.4 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.4/13.4 MB\u001b[0m \u001b[31m82.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n",
            "Downloading jedi-0.19.2-py2.py3-none-any.whl (1.6 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m51.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hBuilding wheels for collected packages: labptptm2, asciitree\n",
            "  Building wheel for labptptm2 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for labptptm2: filename=labptptm2-0.2.1-py3-none-any.whl size=9866 sha256=d684c18b7fb67c5184ff9f7caa5171a7740fa4ea87867eb97722608b7b53338d\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-0sn3n8gl/wheels/8b/50/73/a90cbfa53b548edf56cf17eae0a20f63edc8928310f54e258d\n",
            "  Building wheel for asciitree (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for asciitree: filename=asciitree-0.3.3-py3-none-any.whl size=5031 sha256=ae35dd043952e2d77f6dc1f3557bab68f15febd806cddf6c2d82c538e68eac36\n",
            "  Stored in directory: /root/.cache/pip/wheels/71/c1/da/23077eb3b87d24d6f3852ed1ed1a1ac2d3c885ad6ebd2b4a07\n",
            "Successfully built labptptm2 asciitree\n",
            "Installing collected packages: asciitree, numcodecs, jmespath, jedi, fasteners, aioitertools, zarr, botocore, aiobotocore, s3fs, labptptm2\n",
            "Successfully installed aiobotocore-2.21.1 aioitertools-0.12.0 asciitree-0.3.3 botocore-1.37.1 fasteners-0.19 jedi-0.19.2 jmespath-1.0.1 labptptm2-0.2.1 numcodecs-0.16.0 s3fs-2025.3.2 zarr-2.9.5\n",
            "Collecting https://github.com/ChenHongBo0420/Q/archive/main.zip\n",
            "  Downloading https://github.com/ChenHongBo0420/Q/archive/main.zip\n",
            "\u001b[2K     \u001b[32m-\u001b[0m \u001b[32m9.5 kB\u001b[0m \u001b[31m954.4 kB/s\u001b[0m \u001b[33m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from gdbp==0.1.0) (4.67.1)\n",
            "Collecting wget (from gdbp==0.1.0)\n",
            "  Downloading wget-3.2.zip (10 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Building wheels for collected packages: gdbp, wget\n",
            "  Building wheel for gdbp (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for gdbp: filename=gdbp-0.1.0-py3-none-any.whl size=9663 sha256=7bfb920cffb502724ee811f7865ac1c42c4d0e02020502ffa9866b664562e3c7\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-fntoovo4/wheels/f9/7e/61/f6d3b46a2106afdd4d52a674be0bc77461789f6187846a18f7\n",
            "  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for wget: filename=wget-3.2-py3-none-any.whl size=9655 sha256=fc63fc082e4fe6347563a215bc97d88193d3ce7a759f8a3a357db5e0c93df9d1\n",
            "  Stored in directory: /root/.cache/pip/wheels/40/b3/0f/a40dbd1c6861731779f62cc4babcb234387e11d697df70ee97\n",
            "Successfully built gdbp wget\n",
            "Installing collected packages: wget, gdbp\n",
            "Successfully installed gdbp-0.1.0 wget-3.2\n",
            "Collecting https://github.com/remifan/LabPtPTm2/archive/master.zip\n",
            "  Using cached https://github.com/remifan/LabPtPTm2/archive/master.zip\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: zarr==2.9.5 in /usr/local/lib/python3.11/dist-packages (from zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.9.5)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from labptptm2==0.2.1) (2025.3.2)\n",
            "Requirement already satisfied: s3fs in /usr/local/lib/python3.11/dist-packages (from labptptm2==0.2.1) (2025.3.2)\n",
            "Requirement already satisfied: pyyaml in /usr/local/lib/python3.11/dist-packages (from labptptm2==0.2.1) (6.0.2)\n",
            "Requirement already satisfied: asciitree in /usr/local/lib/python3.11/dist-packages (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.3.3)\n",
            "Requirement already satisfied: numpy>=1.7 in /usr/local/lib/python3.11/dist-packages (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.0.2)\n",
            "Requirement already satisfied: fasteners in /usr/local/lib/python3.11/dist-packages (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.19)\n",
            "Requirement already satisfied: numcodecs>=0.6.4 in /usr/local/lib/python3.11/dist-packages (from zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.16.0)\n",
            "Requirement already satisfied: notebook in /usr/local/lib/python3.11/dist-packages (from zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.5.7)\n",
            "Requirement already satisfied: ipytree in /usr/local/lib/python3.11/dist-packages (from zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.2)\n",
            "Requirement already satisfied: aiobotocore<3.0.0,>=2.5.4 in /usr/local/lib/python3.11/dist-packages (from s3fs->labptptm2==0.2.1) (2.21.1)\n",
            "Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.11/dist-packages (from s3fs->labptptm2==0.2.1) (3.11.15)\n",
            "Requirement already satisfied: aioitertools<1.0.0,>=0.5.1 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (0.12.0)\n",
            "Requirement already satisfied: botocore<1.37.2,>=1.37.0 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (1.37.1)\n",
            "Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (2.8.2)\n",
            "Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (1.0.1)\n",
            "Requirement already satisfied: multidict<7.0.0,>=6.0.0 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (6.4.3)\n",
            "Requirement already satisfied: wrapt<2.0.0,>=1.10.10 in /usr/local/lib/python3.11/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (1.17.2)\n",
            "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (2.6.1)\n",
            "Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (1.3.2)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (25.3.0)\n",
            "Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (1.6.0)\n",
            "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (0.3.1)\n",
            "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.11/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (1.20.0)\n",
            "Requirement already satisfied: typing_extensions in /usr/local/lib/python3.11/dist-packages (from numcodecs>=0.6.4->zarr==2.9.5->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.13.2)\n",
            "Requirement already satisfied: ipywidgets<9,>=7.5.0 in /usr/local/lib/python3.11/dist-packages (from ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (7.7.1)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.1.6)\n",
            "Requirement already satisfied: tornado>=6.1 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.4.2)\n",
            "Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (24.0.1)\n",
            "Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (23.1.0)\n",
            "Requirement already satisfied: traitlets>=4.2.1 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.7.1)\n",
            "Requirement already satisfied: jupyter-core>=4.6.1 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.7.2)\n",
            "Requirement already satisfied: jupyter-client<8,>=5.3.4 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.1.12)\n",
            "Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.0)\n",
            "Requirement already satisfied: nbformat in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.10.4)\n",
            "Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (7.16.6)\n",
            "Requirement already satisfied: nest-asyncio>=1.5 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.6.0)\n",
            "Requirement already satisfied: ipykernel in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.17.1)\n",
            "Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.8.3)\n",
            "Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.18.1)\n",
            "Requirement already satisfied: prometheus-client in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.21.1)\n",
            "Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.11/dist-packages (from notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.2.0)\n",
            "Requirement already satisfied: urllib3!=2.2.0,<3,>=1.25.4 in /usr/local/lib/python3.11/dist-packages (from botocore<1.37.2,>=1.37.0->aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (2.3.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.11/dist-packages (from ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.6.10)\n",
            "Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (7.34.0)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.0.14)\n",
            "Requirement already satisfied: debugpy>=1.0 in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.8.0)\n",
            "Requirement already satisfied: matplotlib-inline>=0.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.1.7)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (24.2)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ipykernel->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (5.9.5)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.11/dist-packages (from jupyter-core>=4.6.1->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.3.7)\n",
            "Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.11/dist-packages (from nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.4)\n",
            "Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.13.4)\n",
            "Requirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (6.2.0)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.7.1)\n",
            "Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.3.0)\n",
            "Requirement already satisfied: markupsafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.0.2)\n",
            "Requirement already satisfied: mistune<4,>=2.0.3 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.1.3)\n",
            "Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.10.2)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.5.1)\n",
            "Requirement already satisfied: pygments>=2.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.18.0)\n",
            "Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.21.1)\n",
            "Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.23.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil<3.0.0,>=2.1->aiobotocore<3.0.0,>=2.5.4->s3fs->labptptm2==0.2.1) (1.17.0)\n",
            "Requirement already satisfied: ptyprocess in /usr/local/lib/python3.11/dist-packages (from terminado>=0.8.3->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.7.0)\n",
            "Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.11/dist-packages (from yarl<2.0,>=1.17.0->aiohttp!=4.0.0a0,!=4.0.0a1->s3fs->labptptm2==0.2.1) (3.10)\n",
            "Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.11/dist-packages (from argon2-cffi->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (21.2.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.11/dist-packages (from bleach!=5.0.0->bleach[css]!=5.0.0->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.5.1)\n",
            "Requirement already satisfied: tinycss2<1.5,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.4.0)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (75.2.0)\n",
            "Requirement already satisfied: jedi>=0.16 in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.19.2)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.7.5)\n",
            "Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (3.0.51)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.0)\n",
            "Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.11/dist-packages (from ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.9.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2024.10.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.24.0)\n",
            "Requirement already satisfied: jupyter-server<3,>=1.8 in /usr/local/lib/python3.11/dist-packages (from notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.16.0)\n",
            "Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.17.1)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->nbconvert>=5->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.7)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (2.22)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.11/dist-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.8.4)\n",
            "Requirement already satisfied: anyio>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (4.9.0)\n",
            "Requirement already satisfied: websocket-client in /usr/local/lib/python3.11/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.8.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.11/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=4.0.0->ipywidgets<9,>=7.5.0->ipytree->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (0.2.13)\n",
            "Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook->zarr[jupyter]==2.9.5->labptptm2==0.2.1) (1.3.1)\n",
            "Found existing installation: numcodecs 0.16.0\n",
            "Uninstalling numcodecs-0.16.0:\n",
            "  Successfully uninstalled numcodecs-0.16.0\n",
            "Found existing installation: zarr 2.9.5\n",
            "Uninstalling zarr-2.9.5:\n",
            "  Successfully uninstalled zarr-2.9.5\n",
            "Collecting zarr==2.10.3\n",
            "  Downloading zarr-2.10.3-py3-none-any.whl.metadata (4.6 kB)\n",
            "Collecting numcodecs==0.10.2\n",
            "  Downloading numcodecs-0.10.2.tar.gz (4.5 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.5/4.5 MB\u001b[0m \u001b[31m27.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: asciitree in /usr/local/lib/python3.11/dist-packages (from zarr==2.10.3) (0.3.3)\n",
            "Requirement already satisfied: numpy>=1.7 in /usr/local/lib/python3.11/dist-packages (from zarr==2.10.3) (2.0.2)\n",
            "Requirement already satisfied: fasteners in /usr/local/lib/python3.11/dist-packages (from zarr==2.10.3) (0.19)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.11/dist-packages (from numcodecs==0.10.2) (0.4)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.11/dist-packages (from numcodecs==0.10.2) (4.13.2)\n",
            "Downloading zarr-2.10.3-py3-none-any.whl (146 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m146.5/146.5 kB\u001b[0m \u001b[31m7.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hBuilding wheels for collected packages: numcodecs\n",
            "  Building wheel for numcodecs (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for numcodecs: filename=numcodecs-0.10.2-cp311-cp311-linux_x86_64.whl size=5770452 sha256=55190bbef64cc031af280c8f50282d9f57bed04d85f1b910dc5adf8baed72926\n",
            "  Stored in directory: /root/.cache/pip/wheels/89/f9/72/1e44f201207b8cc521a740fc1691404833f333c27a5421d473\n",
            "Successfully built numcodecs\n",
            "Installing collected packages: numcodecs, zarr\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "labptptm2 0.2.1 requires zarr[jupyter]==2.9.5, but you have zarr 2.10.3 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0mSuccessfully installed numcodecs-0.10.2 zarr-2.10.3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:root:Data would be auto-cached in default temporary location: /tmp/labptptm2, set labptptm2.config.cache_storage to other locations to suppress this warning\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "loading data:   0%|          | 0/1 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7f4d8f112474483393045b60237272a1"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "loading data:   0%|          | 0/1 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "3cd60714b2264a30a79d24ba850263ea"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "training:   0%|          | 0/2998 [00:00<?, ?it/s]"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "30c4efe4c20e426fb541310aa7be33ab"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "全局 Q-factor: 8.8023\n",
            "全局 BER     : 2.9349e-03\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "if not hasattr(np, 'PINF'):\n",
        "    np.PINF = np.inf\n",
        "if not hasattr(np, 'NINF'):\n",
        "    np.NINF = -np.inf\n",
        "\n",
        "\n",
        "try:\n",
        "  import jax\n",
        "except ModuleNotFoundError:\n",
        "  %pip install --upgrade \"jax[cpu]\"\n",
        "# install commplax if not found\n",
        "try:\n",
        "  import commplax\n",
        "except ModuleNotFoundError:\n",
        "  %pip install https://github.com/ChenHongBo0420/Comm/archive/master.zip\n",
        "# install data api if not found\n",
        "try:\n",
        "  import labptptm2\n",
        "except ModuleNotFoundError:\n",
        "  %pip install https://github.com/remifan/LabPtPTm2/archive/master.zip\n",
        "\n",
        "\n",
        "# install GDBP if not found\n",
        "try:\n",
        "  import gdbp\n",
        "except ModuleNotFoundError:\n",
        "  %pip install https://github.com/ChenHongBo0420/Q/archive/main.zip\n",
        "\n",
        "%pip install https://github.com/remifan/LabPtPTm2/archive/master.zip\n",
        "%pip uninstall numcodecs zarr -y\n",
        "%pip install \"zarr==2.10.3\" \"numcodecs==0.10.2\"\n",
        "\n",
        "\n",
        "# —— 导入库 ——\n",
        "import numpy as np\n",
        "from tqdm.auto import tqdm\n",
        "from functools import partial\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "from commplax import util, comm\n",
        "from gdbp import gdbp_base as gb, data as gdat, aux\n",
        "\n",
        "# —— 加载数据集 ——\n",
        "ds_train = gdat.load(1, 0, 4, 1)[0]\n",
        "ds_test  = gdat.load(2, 0, 4, 1)[0]\n",
        "\n",
        "# —— 只初始化 FDBP 的函数 ——\n",
        "def init_fdbp(data: gdat.Input, **kwargs):\n",
        "    mode  = kwargs.get('mode', 'train')\n",
        "    steps = kwargs.get('steps', 3)\n",
        "    dtaps = kwargs.get('dtaps', 271)\n",
        "    ntaps = kwargs.get('ntaps', 71)\n",
        "    rtaps = kwargs.get('rtaps', 61)\n",
        "    xi    = kwargs.get('xi', 1.1)  # FDBP 的 NLC 缩放因子\n",
        "\n",
        "    # 构造 init_fn 和 model_init\n",
        "    fdbp_init  = partial(gb.fdbp_init, data.a, steps=steps)\n",
        "    model_init = partial(gb.model_init, data)\n",
        "\n",
        "    comm_conf = {\n",
        "        'mode': mode,\n",
        "        'steps': steps,\n",
        "        'dtaps': dtaps,\n",
        "        'rtaps': rtaps\n",
        "    }\n",
        "\n",
        "    # FDBP：static D-filter + static N-filter (scaled by xi)，模块列表留空\n",
        "    fdbp = model_init(\n",
        "        {**comm_conf,\n",
        "         'ntaps': ntaps,\n",
        "         'init_fn': fdbp_init(xi=xi)},\n",
        "        [],                # 不需要额外指定子模块\n",
        "        name='FDBP'\n",
        "    )\n",
        "    return fdbp\n",
        "\n",
        "# —— 初始化训练/测试模型 ——\n",
        "model_train = init_fdbp(ds_train)\n",
        "model_test  = init_fdbp(ds_test, mode='test')\n",
        "\n",
        "# —— 训练 ——\n",
        "params_queue = [None] * 3\n",
        "for _, p, _ in gb.train(model_train, ds_train, n_iter=3000):\n",
        "    params_queue.append(p)\n",
        "    params = params_queue.pop(0)\n",
        "\n",
        "# —— 测试 ——\n",
        "result, z = gb.test(model_test, params, ds_test)\n",
        "\n",
        "# —— 输出指标 ——\n",
        "print(f\"全局 Q-factor: {result.QSq.total:.4f}\")\n",
        "print(f\"全局 BER     : {result.BER.total:.4e}\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# --------------------------------------------------------------\n",
        "# 1. 取出补偿前波形、理想符号、补偿后符号\n",
        "# --------------------------------------------------------------\n",
        "rx_before = ds_test.y[:, 0]                 # 补偿前波形（X-pol）\n",
        "tx_sym    = ds_test.x[z.t.start:z.t.stop, 0]# 对齐后的 Tx 符号\n",
        "rx_after  = z.val[:, 0]                     # 补偿后符号（X-pol）\n",
        "\n",
        "# --------------------------------------------------------------\n",
        "# 2. 星座图\n",
        "# --------------------------------------------------------------\n",
        "def block_si_snr(x, s, blk=16384):\n",
        "    out=[]\n",
        "    for i in range(0, len(s)-blk, blk):\n",
        "        sb, xb = s[i:i+blk], x[i:i+blk]\n",
        "        alpha  = np.vdot(xb, sb) / np.vdot(sb, sb)      # 最佳缩放\n",
        "        e      = xb - alpha*sb\n",
        "        out.append(10*np.log10(np.mean(np.abs(alpha*sb)**2) /\n",
        "                               np.mean(np.abs(e)**2)))\n",
        "    return np.array(out)\n",
        "\n",
        "def plot_const(sig, title):\n",
        "    plt.figure(figsize=(3.6,3.6))\n",
        "    plt.scatter(sig.real[::300], sig.imag[::300], s=.3, alpha=.3)\n",
        "    plt.gca().set_aspect(\"equal\")\n",
        "    plt.title(title); plt.xlabel(\"I\"); plt.ylabel(\"Q\")\n",
        "\n",
        "def mse_vs_sisnr(sig, sym, seg=16000, N=400):\n",
        "    rng = np.random.default_rng(0)\n",
        "    idx = rng.choice(len(sym)-seg, N, replace=False)\n",
        "    mse, sisnr = [], []\n",
        "    for i in idx:\n",
        "        s = sym[i:i+seg]; x = sig[i:i+seg]\n",
        "        alpha = np.vdot(x, s) / np.vdot(s, s)\n",
        "        e     = x - alpha*s\n",
        "        mse  .append(np.mean(np.abs(x-s)**2))\n",
        "        sisnr.append(10*np.log10(np.sum(np.abs(alpha*s)**2) /\n",
        "                                 np.sum(np.abs(e)**2)))\n",
        "    return np.array(mse), np.array(sisnr)\n",
        "# 补偿前：2sample/sym，要 2:1 下采样\n",
        "plot_const(rx_before[::2], \"Before EQ  (Rx)\")\n",
        "plot_const(rx_after,       \"After  EQ  (GDBP)\")\n",
        "\n",
        "# --------------------------------------------------------------\n",
        "# 3. 块级 SI-SNR 直方图\n",
        "# --------------------------------------------------------------\n",
        "snr_before = block_si_snr(rx_before[::2],   tx_sym)  # 下采样后再算\n",
        "snr_after  = block_si_snr(rx_after,         tx_sym)\n",
        "\n",
        "plt.figure(figsize=(6,3))\n",
        "plt.hist(snr_before, bins=80, alpha=.6, label='before EQ', density=True)\n",
        "plt.hist(snr_after,  bins=80, alpha=.6, label='after  EQ', density=True)\n",
        "plt.xlabel(\"block SI-SNR (dB)\"); plt.title(\"SNR distribution\"); plt.legend()\n",
        "\n",
        "# --------------------------------------------------------------\n",
        "# 4. MSE ↔ SI-SNR 散点（补偿后）\n",
        "# --------------------------------------------------------------\n",
        "mse_eq , sisnr_eq = mse_vs_sisnr(rx_after, tx_sym)\n",
        "plt.figure(figsize=(4,3))\n",
        "plt.scatter(mse_eq, sisnr_eq, s=8, alpha=.5)\n",
        "plt.xlabel(\"MSE\"); plt.ylabel(\"SI-SNR (dB)\")\n",
        "plt.title(\"After EQ  (MSE ↔ SI-SNR)\")\n",
        "\n",
        "# --------------------------------------------------------------\n",
        "# 5. 打印统计\n",
        "# --------------------------------------------------------------\n",
        "print(f\"\\nAfter-EQ block SNR  mean={snr_after.mean():.2f} dB,  std={snr_after.std():.2f}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "u7c0v6p3X_CO",
        "outputId": "2a6dc4d5-a8d4-4594-8a74-394f4d944635"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "After-EQ block SNR  mean=16.02 dB,  std=0.47\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x300 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 400x300 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 1) 幅度 vs. 相位分布（After EQ）\n",
        "amp  = np.abs(rx_after)\n",
        "ph   = np.angle(rx_after)\n",
        "fig,(ax1,ax2)=plt.subplots(1,2,figsize=(8,3))\n",
        "ax1.hist(amp, bins=300, density=True);  ax1.set_title(\"Amplitude PDF  (After EQ)\")\n",
        "ax2.hist(ph , bins=300, density=True);  ax2.set_title(\"Phase PDF (rad)\")\n",
        "plt.show()\n",
        "\n",
        "# 2) 簇重心 + 95% 置信椭圆\n",
        "from matplotlib.patches import Ellipse\n",
        "def plot_cluster_ellipse(sig):\n",
        "    plt.figure(figsize=(3.6,3.6))\n",
        "    for cen in np.unique(tx_sym):                 # ideal 16-QAM 冲击点\n",
        "        idx = tx_sym == cen\n",
        "        pts = rx_after[idx]\n",
        "        if len(pts)==0: continue\n",
        "        μ  = [pts.real.mean(), pts.imag.mean()]\n",
        "        Σ  = np.cov(pts.real, pts.imag)\n",
        "        w, v = np.linalg.eigh(Σ)\n",
        "        angle = np.degrees(np.arctan2(*v[:,1][::-1]))\n",
        "        for k in [2]:                             # 2σ ≈ 95%\n",
        "            ell = Ellipse(xy=μ, width=2*k*np.sqrt(w[0]), height=2*k*np.sqrt(w[1]),\n",
        "                           angle=angle, ec='r', fc='none', lw=.8)\n",
        "            plt.gca().add_patch(ell)\n",
        "        plt.scatter(pts.real, pts.imag, s=.2, alpha=.3)\n",
        "    plt.gca().set_aspect(\"equal\")\n",
        "    plt.title(\"Cluster 95% ellipses\")\n",
        "    plt.xlabel(\"I\"); plt.ylabel(\"Q\")\n",
        "plot_cluster_ellipse(rx_after)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 676
        },
        "id": "32YY_jqTYCeE",
        "outputId": "68fde8d9-bb3c-4d38-eed3-1f42b07ed8ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x300 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from scipy.signal import welch\n",
        "\n",
        "# unwrap phase after equalization (X-pol)\n",
        "phi = np.unwrap(np.angle(rx_after))\n",
        "fs  = 1.0          # symbol-rate normalized Hz\n",
        "f, Sphi = welch(phi, fs=fs, nperseg=2048, scaling='density')\n",
        "\n",
        "plt.figure(figsize=(5,3))\n",
        "plt.semilogx(f, 10*np.log10(Sphi))\n",
        "plt.xlabel(\"Offset freq (♠/Sym)\"); plt.ylabel(\"PSD (dBrad²/Hz)\")\n",
        "plt.title(\"Phase-noise spectrum after EQ\")\n",
        "plt.grid(True, which='both', ls='--', lw=.4)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 338
        },
        "id": "Ugk8tWgqYF-y",
        "outputId": "3d6df7ab-17de-489b-955e-c1a32d8ae367"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x300 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def block_ber(x_hat, s, blk=4096):\n",
        "    e = x_hat != s\n",
        "    out = [e[i:i+blk].mean() for i in range(0, len(e)-blk, blk)]\n",
        "    return np.array(out)\n",
        "\n",
        "ber_blk = block_ber(rx_after, tx_sym)\n",
        "ber_sorted = np.sort(ber_blk)\n",
        "p = np.linspace(0,1,len(ber_sorted),endpoint=False)\n",
        "\n",
        "plt.figure(figsize=(4,3))\n",
        "plt.semilogy(ber_sorted, 1-p)\n",
        "plt.xlabel(\"BER (per 4 k sym block)\")\n",
        "plt.ylabel(\"1-CDF\"); plt.grid()\n",
        "plt.title(\"Block-BER tail\")\n",
        "plt.axhline(1e-2, ls='--', lw=.8, c='r')   # e.g., SD-FEC 2 % overhead\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 351
        },
        "id": "3eMg_Ca3YPRs",
        "outputId": "bd8917a8-79a0-40b8-bf2a-18687093a0a4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.lines.Line2D at 0x7bf3e544fc50>"
            ]
          },
          "metadata": {},
          "execution_count": 5
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 400x300 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 3.1 bit-mapping: 16-QAM Gray\n",
        "def qam16_gray_bits(x):\n",
        "    b = np.zeros((len(x),4), dtype=np.uint8)\n",
        "    b[:,0] = (x.real > 0).astype(np.uint8)\n",
        "    b[:,1] = (np.abs(x.real) < 1).astype(np.uint8)\n",
        "    b[:,2] = (x.imag > 0).astype(np.uint8)\n",
        "    b[:,3] = (np.abs(x.imag) < 1).astype(np.uint8)\n",
        "    return b.reshape(-1)\n",
        "\n",
        "bits_tx  = qam16_gray_bits(tx_sym)\n",
        "bits_hat = qam16_gray_bits(rx_after)\n",
        "\n",
        "# 3.2 block-BER with correct bit metric\n",
        "blk=4096*4               # 4 bits / sym\n",
        "ber_blk = [ (bits_tx[i:i+blk] != bits_hat[i:i+blk]).mean()\n",
        "            for i in range(0, len(bits_tx)-blk, blk) ]\n",
        "ber_blk = np.array(ber_blk)\n",
        "\n",
        "# 3.3 BER heat-map\n",
        "Ncol  = 200              # how many time-slices to show\n",
        "step  = len(bits_tx)//(blk*Ncol)\n",
        "matrix= ber_blk.reshape(-1, step).mean(1)  # avg into Ncol columns\n",
        "plt.figure(figsize=(7,3))\n",
        "plt.imshow(matrix[np.newaxis,:], aspect='auto', vmin=1e-5, vmax=1e-2,\n",
        "           cmap='magma', extent=[0,len(tx_sym)/1e3,0,1])\n",
        "plt.colorbar(label='BER'); plt.xlabel(\"kSym\"); plt.yticks([])\n",
        "plt.title(\"BER vs time (dim0)\")\n"
      ],
      "metadata": {
        "id": "46aIwF1lY8fR",
        "outputId": "71a065c8-4752-4a8d-87ae-eb9f2ca590e8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 351
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'BER vs time (dim0)')"
            ]
          },
          "metadata": {},
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x300 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}